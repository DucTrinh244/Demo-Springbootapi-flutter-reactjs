import 'dart:convert'; // ƒê·ªÉ l√†m vi·ªác v·ªõi JSON

import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

import '../Services/globals.dart';

class AddUserPage extends StatefulWidget {
  const AddUserPage({super.key});

  @override
  // ignore: library_private_types_in_public_api
  _AddUserPageState createState() => _AddUserPageState();
}

class _AddUserPageState extends State<AddUserPage> {
  final _nameController = TextEditingController();
  final _emailController = TextEditingController();
  String _errorMessage = ''; // ƒê·ªÉ hi·ªÉn th·ªã th√¥ng b√°o l·ªói n·∫øu c√≥

  @override
  void dispose() {
    _nameController.dispose();
    _emailController.dispose();
    super.dispose();
  }

  // H√†m x·ª≠ l√Ω g·ª≠i d·ªØ li·ªáu l√™n API
  Future<void> _submitData() async {
    final name = _nameController.text;
    final email = _emailController.text;

    if (name.isEmpty || email.isEmpty) {
      setState(() {
        _errorMessage = 'Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß t√™n v√† email.';
      });
      return;
    }

    try {
      final response = await http.post(
        Uri.parse(baseUrl), // ƒê·ªãa ch·ªâ API
        headers: defaultHeaders,
        body: json.encode({'name': name, 'email': email}),
      );

      if (response.statusCode == 200) {
        // Th√†nh c√¥ng, chuy·ªÉn h∆∞·ªõng ho·∫∑c hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
        // ignore: use_build_context_synchronously
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('üéâ Ng∆∞·ªùi d√πng ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng!')),
        );
        _nameController.clear();
        _emailController.clear();
        setState(() {
          _errorMessage = ''; // Reset l·ªói
        });
      } else {
        setState(() {
          _errorMessage = '‚ùå L·ªói khi th√™m ng∆∞·ªùi d√πng. Vui l√≤ng th·ª≠ l·∫°i.';
        });
      }
    } catch (error) {
      setState(() {
        _errorMessage = '‚ùå L·ªói k·∫øt n·ªëi. Vui l√≤ng th·ª≠ l·∫°i.';
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Add User')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            // Hi·ªÉn th·ªã l·ªói n·∫øu c√≥
            if (_errorMessage.isNotEmpty)
              Padding(
                padding: const EdgeInsets.only(bottom: 10.0),
                child: Text(
                  _errorMessage,
                  style: TextStyle(color: Colors.red, fontSize: 16),
                ),
              ),
            // TextField: Nh·∫≠p t√™n ng∆∞·ªùi d√πng
            TextField(
              controller: _nameController,
              decoration: InputDecoration(
                labelText: 'Name',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 16),
            // TextField: Nh·∫≠p email ng∆∞·ªùi d√πng
            TextField(
              controller: _emailController,
              decoration: InputDecoration(
                labelText: 'Email',
                border: OutlineInputBorder(),
              ),
              keyboardType: TextInputType.emailAddress,
            ),
            SizedBox(height: 16),
            // N√∫t g·ª≠i d·ªØ li·ªáu
            ElevatedButton(onPressed: _submitData, child: Text('Submit')),
          ],
        ),
      ),
    );
  }
}
